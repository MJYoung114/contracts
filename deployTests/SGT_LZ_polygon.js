// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var LetOps = require("../test/library/LetOps.js");
var CONSTANTS = require("../test/CONSTANTS.js");
var DeployHelpers = require("./helpers/DeployHelpers.js");

var avaxOraclePriceFeedAddress = ethers.utils.getAddress("0xe04676B9A9A2973BCb0D1478b5E1E9098BBB7f3D");

var joeOraclePriceFeedAddress = ethers.utils.getAddress("0x02D35d3a8aC3e1626d3eE09A78Dd87286F5E8e3a");

var qiOraclePriceFeedAddress = ethers.utils.getAddress("0x36E039e6391A5E7A7267650979fdf613f659be5D");

var spellOraclePriceFeedAddress = ethers.utils.getAddress("0x4F3ddF9378a4865cf4f28BE51E10AECb83B7daeE");

function launchSlaveMarkets(param, deploymentArgs) {
  var treasury = param.treasury;
  var paymentToken = param.paymentToken;
  var longShort = param.longShort;
  var staker = param.staker;
  return LetOps.AwaitThen.let_(Curry._1(deploymentArgs.getNamedAccounts, undefined), (function (namedAccounts) {
                return LetOps.AwaitThen.let_(ethers.getSigners(), (function (loadedAccounts) {
                              var admin = loadedAccounts[1];
                              console.log("deploying markets");
                              return LetOps.AwaitThen.let_(DeployHelpers.deployAvalancheMarket(longShort, staker, treasury, admin, paymentToken, avaxOraclePriceFeedAddress, deploymentArgs.deployments, namedAccounts, "AVAX Market 2x", "2AVAX", CONSTANTS.tenToThe18, 2, 2, /* AaveDAI */0), (function (param) {
                                            return DeployHelpers.deployAvalancheMarket(longShort, staker, treasury, admin, paymentToken, avaxOraclePriceFeedAddress, deploymentArgs.deployments, namedAccounts, "Ether Market 2x", "2ETH", CONSTANTS.tenToThe18, 2, 3, /* AaveDAI */0);
                                          }));
                            }));
              }));
}

var benqiDaiCToken = "0x835866d37AFB8CB8F8334dCCdaf66cf01832Ff5D";

var joeDaiCToken = "0xc988c170d0E38197DC634A45bF00169C7Aa7CA19";

exports.avaxOraclePriceFeedAddress = avaxOraclePriceFeedAddress;
exports.joeOraclePriceFeedAddress = joeOraclePriceFeedAddress;
exports.qiOraclePriceFeedAddress = qiOraclePriceFeedAddress;
exports.spellOraclePriceFeedAddress = spellOraclePriceFeedAddress;
exports.benqiDaiCToken = benqiDaiCToken;
exports.joeDaiCToken = joeDaiCToken;
exports.launchSlaveMarkets = launchSlaveMarkets;
/* avaxOraclePriceFeedAddress Not a pure module */
